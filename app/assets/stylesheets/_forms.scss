@use "globalvars";

form {
  .single-input{
    display: flex;
    flex-direction: row;

    label {
      width: 90px;
      font-weight: bold;
    }

    .longer-input {
      width: 250px;
      max-width: 250px;
      min-width: 250px;
      padding: 1px 3px;
    }

    .medium-length-input {
      width: 150px;
      max-width: 150px;
      min-width: 150px;
      padding: 1px 3px;
    }

    .radio-button {
      font-size: 14px;
      line-height: 1.1;
      display: flex;

      input[type="radio"] {
        appearance: none;
        background-color: #fff;
        margin: 0;
        font: inherit;
        color: currentColor;
        width: 13px;
        height: 13px;
        border: 1px solid currentColor;
        border-radius: 50%;
        transform: translateY(2px);

        display: grid;
        place-content: center;
      }

      input[type="radio"]::before {
        content: "";
        width: 7px;
        height: 7px;
        border-radius: 50%;
        transform: scale(0);
        transition: 120ms transform ease-in-out;
        box-shadow: inset 10px 10px black;
      }

      input[type="radio"]:checked::before {
        transform: scale(1);
      }

      label {
        width: 55px;
        font-weight: normal;
        font-size: 16px;
        padding-left: 4px;
        display: flex;
        align-items: center;
      }
    }

    textarea {
      min-height: 100px;
    }
  }

  .dog-list {

    .sub-title {
      margin-bottom: 5px;
    }

    .list {
      display: flex;
      margin-bottom: 5px;
      gap: 5px;

      label {
        display: flex;
        cursor: pointer;
      }

      input[type="checkbox"]{
        display: none;
      }

      .dog-select-label {
        opacity: 50%;
      }

      .dog-select-label.clicked {
        box-shadow: 0px 0px 10px 2px #ef0000;
        opacity: 100%;
      }
    }
  }
}

.contents, .feed-content{
  form {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    flex: 0;
    width: 95%;

    .attachments {
      max-width: 400px;
      
  
      .preview-images {
        display: flex;
        gap: 5px;
        flex-wrap: wrap;
        max-width: 75%;
        width: 75%;
        margin: 2px;
    
        img {
          max-height: 100px;
          height: 100px;
        }
      }
    }

    input[type="file"]{
      max-width: 200px;
    }
  }
}

.dogs {
  .actions {
    display: flex;
    justify-content: center;
    min-width: max(20%, 80px);

    .button_to {
      display: flex;
      justify-content: center;
      width: 100%;

      button {
        width: 100%;
      }
    }
  }
}

.play-dates {
  .edit, .new {
    form {
      display: flex;
      gap: 5px;
      flex-direction: column;
      align-items: flex-start;
      width: 95%;
  
      .single-input textarea {
        width: 205px;
      }
    }
  }
}

//BUTTONS BUTTONS BUTTONS
$create-color: #006900;
$edit-color: #72b900;
$edit-secondary-color: rgb(149, 206, 84);
$delete-color: red;
$delete-secondary-color: rgb(255, 103, 103);
$filter-color: rgb(56, 56, 56);
$filter-secondary-color: rgb(110, 110, 110);
$track-color: rgb(2, 168, 197);
$track-secondary-color: rgb(99, 201, 219);
$untrack-color: rgb(197, 90, 2);
$untrack-secondary-color: rgb(216, 130, 60);
$view-color: rgb(56, 56, 56);
$view-secondary-color: rgb(110, 110, 110);

.wide-button {
  width: 100%;
  display: flex;
  justify-content: center;
}

input[type="submit"].create {
  border: 3px solid $create-color;
}

input[type="submit"].edit {
  border: 3px solid $edit-color;
}

input[type="submit"].create, input[type="submit"].edit {
  height: 40px;
  width: 85%;
  margin: 3px auto;
  border-radius: 15px;
  transition: all 0.3s;
  cursor: pointer;
  background: white;
  font-size: 1.1em;
  font-weight: 550;
  //font-family: 'Montserrat', sans-serif; 
}

input[type="submit"].create:hover {
  background: $create-color;
  color: white;
  font-size: 1.3em;
}

input[type="submit"].edit:hover {
  background: $edit-color;
  color: white;
  font-size: 1.3em;
}

input[type="submit"].create:active {
  background: $create-color;
  color: white;
  font-size: 4em;
}

input[type="submit"].edit:active {
  background: $edit-color;
  color: white;
  font-size: 4em;
}

a.action-button {
  text-decoration: none;
  width: calc(70px + 3vw);
  display: flex;
  align-items: center;

  button {
    width: 100%;
    height: 50px;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 10px;
    border: none;
    border-radius: 5px;
    box-shadow: 1px 1px 3px #00000026;
    font-size: calc(2px + 0.8vw);
    padding: 1px 0px;
  }

  button.filter {
    height: 20px;
    font-size: 13px;
  }
   
  button, button span {
    transition: 200ms;
  }
   
  button .text {
    margin-left: 10px;
    color: white;
    font-weight: bold;
  }
   
  button .icon {
    position: absolute;
    margin-left: calc(55px + 1.5vw);
    height: 40px;
    width: calc(12px + 1.5vw);
    display: flex;
    align-items: center;
    justify-content: center;

    .svg {
      margin: 0px 5px;
    }
  }

  button.filter .icon {
    height: 15px;
    margin-left: 80px;
    width: 30px;
  }
   
  button svg {
    width: 20px;
    min-width: 20px;
    height: 20px;
    min-height: 20px;
    fill: #eee;
  }

  @mixin svg-sizing {
    button + :not(filter) svg {
      width: 25px;
      min-width: 25px;
      height: 25px;
      min-height: 25px;
    }
  }

  @media only screen and (max-width: globalvars.$midscreen-width) {
    @include svg-sizing;
  }

  &.icon-only {
    @include svg-sizing;
  }
   
  button:hover .text {
    color: transparent;
  }
   
  button:hover .icon {
    position: absolute;
    margin: 0px;
    border-left: none;
  }

  @mixin collapsed-styling {
    button:not(.filter) {
      font-size: 0px;
      justify-content: center;
    }

    button:not(.filter), button:not(.filter) span {
      transition: 0ms;
    }

    button:not(.filter) .icon {
      margin-left: 0px;
      flex: 1;
      border-left: none !important;
    }

    button:hover:not(.filter) .icon {
      margin: 0px;
      flex: 1;
    }

    button:hover .icon {
      width: auto;
    }
  }

  // Tablets and mobile
  @media only screen and (max-width: globalvars.$midscreen-width){
    @include collapsed-styling;
  }

  //Desktop
  @media only screen and (min-width: calc(globalvars.$midscreen-width + 1px)){
    button:hover .icon {
      width: calc(70px + 3vw);
    }
  }

  &.icon-only {
    @include collapsed-styling;
  }

  button.filter:hover .icon {
    width: 120px;
  }
   
  button:focus {
    outline: none;
  }
   
  button:active .icon svg {
    transform: scale(0.8);
  }

  //SPECIFIC COLORS FOR EDIT BUTTON
  button.edit {
    background: $edit-color;

    .icon {
      border-left: 1px solid $edit-secondary-color;
    }
  }

  button.edit:hover {
    background: $edit-secondary-color;
  }

  //SPECIFIC COLORS FOR DELETE BUTTON
  button.delete {
    background: $delete-color;

    .icon {
      border-left: 1px solid $delete-secondary-color;
    }
  }

  button.delete:hover {
    background: $delete-secondary-color;
  }

  //SPECIFIC COLORS FOR FILTER BUTTON
  button.filter {
    background: $filter-color;
    min-width: 120px;
    margin-top: 3px;

    .icon {
      border-left: 1px solid $filter-secondary-color;
    }
  }

  button.filter:hover {
    background: $filter-secondary-color;
  }

  //SPECIFIC COLORS FOR TRACK/PLUS BUTTON
  button.track {
    background: $track-color;

    .icon {
      border-left: 1px solid $track-secondary-color;
    }
  }

  button.track:hover {
    background: $track-secondary-color;
  }

  //SPECIFIC COLORS FOR UNTRACK/MINUS BUTTON
  button.untrack {
    background: $untrack-color;

    .icon {
      border-left: 1px solid $untrack-secondary-color;
    }
  }

  button.untrack:hover {
    background: $untrack-secondary-color;
  }

  //SPECIFIC COLORS FOR VIEW BUTTON
  button.view {
    background: $view-color;

    .icon {
      color: black;
      border-left: 1px solid $view-secondary-color;
    }
  }

  button.view:hover {
    background: $view-secondary-color;
  }
}

a.action-button.wide {
  width: calc(85px + 3vw);

  button .icon {
    margin-left: calc(70px + 1.5vw);
  }

  button:hover .icon {
    position: absolute;
    margin: 0px;
    flex: 1;
  }

  @media only screen and (min-width: calc(globalvars.$midscreen-width + 1px)) {
    button:hover .icon {
      width: calc(85px + 3vw);
    }
  }

  @media only screen and (max-width: globalvars.$midscreen-width){
    button .icon {
      margin-left: 0px;
      border-left: none !important;
    }
  }
}

a.action-button.icon-only {
  width: 50px;
}

//NO MORE BUTTONS BUTTONS BUTTONS

//MOBILE SCREENS
@media only screen and (max-width: globalvars.$mobile-width){
  
}

//MIDDLE-SIZED SCREEN
@media only screen and (min-width: calc(globalvars.$mobile-width + 1px)) and (max-width: globalvars.$midscreen-width){
  
}

//LARGEST SCREEN
@media only screen and (min-width: calc(globalvars.$midscreen-width + 1px)){
  
}

